{"version":3,"sources":["components/Filter-Option.js","App.constant.js","components/Filter.js","components/Card.js","components/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["Wrapper","styled","div","FilterButton","button","FilterOption","props","useState","selected","setSelected","arr","query","map","item","key","onClick","onChange","handleButtonClick","style","backgroundColor","BOOLEAN_FILTER_ARR","QUERY_OPTIONS","BASE_URL","Card","CardHeader","h4","CardSubHeader","h5","Filter","selectedFilters","setSelectedFilters","handleFilterChange","data","combineObj","Object","assign","url","filters","queryStr","hasOwnProperty","lowerVal","toLowerCase","constructAPIUrl","tempLaunchArr","i","push","calcFilterArr","FlexRows","ImageSrc","img","ImageContainer","Title","MissionTitle","h6","MissionIdUl","ul","MissionIdli","li","FilterRows","FilterValue","span","cardObj","src","links","length","id","PageHeader","h3","CardWrapper","ContentWrapper","FilterWrapper","FooterText","footer","Homepage","React","respArr","setRespArr","getData","fetch","then","res","json","useEffect","updatedUrl","flight_number","App","className","HomePage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.20ed897a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  @media (max-width: 700px) {\n    margin: 10px;\n    padding: 0px 10px;\n  }\n  @media (min-width: 1024px) {\n    margin: 0px 6px;\n  }\n`;\n\nconst FilterButton = styled.button`\n  width: 90px;\n  height: 35px;\n  border-radius: 7px;\n  margin: 10px;\n  border: none;\n  outline: none;\n  @media (max-width: 700px) {\n    width: 70px;\n    height: 30px;\n    margin: 10px 20px 10px 20px;\n  }\n  @media (min-width: 700px) and (max-width: 1024px) {\n    width: 70px;\n    height: 30px;\n    margin: 10px;\n  }\n  @media (min-width: 1024px) and (max-width: 1200px) {\n    width: 50px;\n    height: 30px;\n  }\n  @media (min-width: 1200px) {\n    width: 70px;\n    height: 30px;\n  }\n`;\n\nconst FilterOption = (props) => {\n  const [selected, setSelected] = useState(\"\");\n  const { arr, query } = props;\n\n  const handleButtonClick = (item) => {\n    setSelected(item);\n    props.onChange({\n      [query]: item,\n    });\n  };\n\n  return (\n    <Wrapper>\n      {arr.map((item) => {\n        return (\n          <FilterButton\n            key={item}\n            onClick={() => handleButtonClick(item)}\n            style={{\n              backgroundColor: selected === item ? \"#7cba01\" : \"#c5e09b\",\n            }}\n          >\n            {item}\n          </FilterButton>\n        );\n      })}\n    </Wrapper>\n  );\n};\n\nexport default FilterOption;\n","export const BOOLEAN_FILTER_ARR = [\"True\", \"False\"];\n\nexport const QUERY_OPTIONS = {\n  launchYear: \"launch_year\",\n  launchSuccess: \"launch_success\",\n  landSuccess: \"land_success\",\n};\n\nexport const BASE_URL = \"https://api.spaceXdata.com/v3/launches?limit=100\";\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport FilterOption from \"./Filter-Option\";\nimport { BOOLEAN_FILTER_ARR, QUERY_OPTIONS, BASE_URL } from \"../App.constant\";\n\nconst Card = styled.div`\n  background-color: white;\n  border-radius: 5px;\n  width: 200px;\n  padding-bottom: 40px;\n  padding-top: 3px;\n  @media (max-width: 450px) {\n    width: 100%;\n  }\n  @media (min-width: 450px) and (max-width: 700px) {\n    width: 300px;\n  }\n  @media (min-width: 870px) and (max-width: 1023px) {\n    width: 205px;\n  }\n  @media (min-width: 1024px) {\n    width: 175px;\n  }\n  @media (min-width: 1200px) {\n    width: 220px;\n  }\n`;\n\nconst CardHeader = styled.h4`\n  margin: 10px;\n`;\n\nconst CardSubHeader = styled.h5`\n  margin: 10px;\n  text-decoration: underline;\n  text-align: center;\n`;\n\nconst Filter = (props) => {\n  const [selectedFilters, setSelectedFilters] = useState({});\n\n  const calcFilterArr = () => {\n    const tempLaunchArr = [];\n    for (let i = 2006; i <= 2020; i++) {\n      tempLaunchArr.push(i);\n    }\n    return tempLaunchArr;\n  };\n\n  const constructAPIUrl = (filters) => {\n    if (filters) {\n      let queryStr = \"\";\n      for (const key in filters) {\n        if (filters.hasOwnProperty(key)) {\n          const lowerVal = `${filters[key]}`.toLowerCase();\n          queryStr += `&${key}=${lowerVal}`;\n        }\n      }\n      return `${BASE_URL}${queryStr}`;\n    }\n  };\n\n  const handleFilterChange = (data) => {\n    if (data) {\n      const combineObj = Object.assign(selectedFilters, data);\n      setSelectedFilters(combineObj);\n      const url = constructAPIUrl(selectedFilters);\n      props.onChange(url);\n    }\n  };\n  return (\n    <Card>\n      <CardHeader>Filters</CardHeader>\n      <CardSubHeader>Launch Year</CardSubHeader>\n      <div>\n        <FilterOption\n          arr={calcFilterArr()}\n          query={QUERY_OPTIONS.launchYear}\n          onChange={handleFilterChange}\n        />\n      </div>\n      <CardSubHeader>Successful Launch</CardSubHeader>\n      <div>\n        <FilterOption\n          arr={BOOLEAN_FILTER_ARR}\n          query={QUERY_OPTIONS.launchSuccess}\n          onChange={handleFilterChange}\n        />\n      </div>\n      <CardSubHeader>Successful Landing</CardSubHeader>\n      <div>\n        <FilterOption\n          arr={BOOLEAN_FILTER_ARR}\n          query={QUERY_OPTIONS.landSuccess}\n          onChange={handleFilterChange}\n        />\n      </div>\n    </Card>\n  );\n};\nexport default Filter;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  background-color: white;\n  border-radius: 5px;\n  margin: 0px 20px 20px 0;\n  display: flex;\n  padding: 15px;\n  flex-direction: column;\n  width: 150px;\n  height: 330px;\n  @media (max-width: 700px) {\n    width: 100%;\n    height: 380px;\n    margin: 20px 0;\n  }\n  @media (min-width: 870px) and (max-width: 1024px) {\n    width: 210px;\n    height: 350px;\n  }\n  @media (min-width: 1024px) {\n    margin: 10px;\n    padding: 10px;\n  }\n  @media (min-width: 1200px) {\n    width: 180px;\n    height: 350px;\n  }\n`;\n\nconst FlexRows = styled.div`\n  display: flex;\n  margin-bottom: 5px;\n  justify-content: center;\n  border-radius: 5px;\n`;\n\nconst ImageSrc = styled.img`\n  width: 150px;\n  height: 150px;\n  @media (max-width: 700px) {\n    width: 250px;\n    height: 220px;\n  }\n  @media (min-width: 870px) and (max-width: 1024px) {\n    width: 200px;\n    height: 210px;\n  }\n  @media (min-width: 1200px) {\n    width: 170px;\n    height: 200px;\n  }\n`;\n\nconst ImageContainer = styled.div`\n  background-color: #f2f2f2;\n`;\n\nconst Title = styled.h5`\n  color: #7177ae;\n  margin: 2px 10px;\n  @media (max-width: 700px) {\n    font-size: 1em;\n  }\n`;\n\nconst MissionTitle = styled.h6`\n  color: #191919;\n  margin: 2px 10px;\n  @media (max-width: 700px) {\n    font-size: 0.8em;\n  }\n`;\n\nconst MissionIdUl = styled.ul`\n  margin: 4px 0px;\n`;\n\nconst MissionIdli = styled.li`\n  color: #7177ae;\n  font-size: 0.8em;\n`;\n\nconst FilterRows = styled.h4`\n  font-size: 0.8em;\n  margin: 3px 0px 3px 10px;\n`;\n\nconst FilterValue = styled.span`\n  color: #7177ae;\n  margin-left: 3px;\n`;\n\nconst Card = (props) => {\n  const { cardObj } = props;\n  return (\n    <Wrapper>\n      <FlexRows>\n        <ImageContainer>\n          <ImageSrc src={cardObj.links[\"mission_patch\"]} />\n        </ImageContainer>\n      </FlexRows>\n      <Title>{cardObj[\"mission_name\"] + \" #\" + cardObj[\"flight_number\"]}</Title>\n      <MissionTitle>Mission Ids:</MissionTitle>\n      <MissionIdUl>\n        {cardObj[\"mission_id\"].length ? (\n          cardObj[\"mission_id\"].map((id) => {\n            return <MissionIdli key={id}>{id}</MissionIdli>;\n          })\n        ) : (\n          <MissionIdli>Not Available</MissionIdli>\n        )}\n      </MissionIdUl>\n      <FilterRows>\n        Launch Year: <FilterValue>{cardObj[\"launch_year\"]}</FilterValue>\n      </FilterRows>\n      <FilterRows>\n        Successful Launch:\n        <FilterValue>{\"\" + cardObj[\"launch_success\"]}</FilterValue>\n      </FilterRows>\n      <FilterRows>\n        Successful Landing:\n        <FilterValue>\n          {cardObj[\"rocket\"][\"first_stage\"][\"cores\"][0][\"land_success\"] === null\n            ? \"None\"\n            : `${cardObj[\"rocket\"][\"first_stage\"][\"cores\"][0][\"land_success\"]}`}\n        </FilterValue>\n      </FilterRows>\n    </Wrapper>\n  );\n};\nexport default Card;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"./Filter\";\nimport Card from \"./Card\";\nimport { BASE_URL } from \"../App.constant\";\n\nconst Wrapper = styled.div`\n  background-color: #ececec;\n  padding: 30px;\n  @media (min-width: 1340px) {\n    padding: 30px 100px;\n  }\n`;\nconst PageHeader = styled.h3`\n  margin-left: 10px;\n`;\nconst CardWrapper = styled.div`\n  flex-basis: 80%;\n  flex-direction: row;\n  display: inline-flex;\n  flex-wrap: wrap;\n  margin-left: 20px;\n  @media (max-width: 700px) {\n    margin: 0;\n  }\n  @media (min-width: 1024px) {\n    margin-left: 13px;\n  }\n`;\nconst ContentWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  @media (max-width: 700px) {\n    flex-direction: column;\n  }\n`;\nconst FilterWrapper = styled.div`\n  flex-basis: 20%;\n`;\nconst FooterText = styled.footer`\n  display: flex;\n  justify-content: center;\n  margin-top: 15px;\n`;\n\nconst Homepage = () => {\n  const [respArr, setRespArr] = React.useState([]);\n\n  const handleCardArr = (updatedUrl) => {\n    getData(updatedUrl);\n  };\n  const getData = (url = BASE_URL) => {\n    fetch(url)\n      .then((res) => res.json())\n      .then((json) => {\n        setRespArr(json);\n      });\n  };\n\n  React.useEffect(() => {\n    getData();\n  }, []);\n\n  return (\n    <Wrapper>\n      <PageHeader> SpaceX Launch Programs</PageHeader>\n      <ContentWrapper>\n        <FilterWrapper>\n          <Filter onChange={handleCardArr} />\n        </FilterWrapper>\n        <CardWrapper>\n          {respArr.map((item) => {\n            return <Card key={item.flight_number} cardObj={item} />;\n          })}\n        </CardWrapper>\n      </ContentWrapper>\n      <FooterText>\n        <b>Developed by:</b>Garvit Arora\n      </FooterText>\n    </Wrapper>\n  );\n};\nexport default Homepage;\n","import React from \"react\";\nimport \"./App.css\";\nimport HomePage from \"./components/HomePage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomePage />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}